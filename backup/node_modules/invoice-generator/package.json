{
  "_args": [
    [
      "invoice-generator",
      "/home/appideas-user5/Desktop/mtpnew"
    ]
  ],
  "_from": "invoice-generator@latest",
  "_id": "invoice-generator@0.3.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/invoice-generator",
  "_npmUser": {
    "email": "jason.douglas@trimeego.com",
    "name": "trimeego"
  },
  "_npmVersion": "1.3.11",
  "_phantomChildren": {},
  "_requested": {
    "name": "invoice-generator",
    "raw": "invoice-generator",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/invoice-generator/-/invoice-generator-0.3.0.tgz",
  "_shasum": "129bc54174a62bf84b9c2e291cc45618820c46b6",
  "_shrinkwrap": null,
  "_spec": "invoice-generator",
  "_where": "/home/appideas-user5/Desktop/mtpnew",
  "dependencies": {
    "Faker": "~0.5.11",
    "async": "~0.2.9",
    "commander": "~2.0.0",
    "genie": "~0.1.4",
    "iso8601": "~1.1.1",
    "isodate": "~0.1.4",
    "moment": "~2.0.0",
    "numbers": "~0.4.0",
    "underscore": "~1.4.4"
  },
  "description": "The invoice generator is a simple tool for generating simulated invoice data.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "129bc54174a62bf84b9c2e291cc45618820c46b6",
    "tarball": "https://registry.npmjs.org/invoice-generator/-/invoice-generator-0.3.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "maintainers": [
    {
      "email": "jason.douglas@trimeego.com",
      "name": "trimeego"
    }
  ],
  "name": "invoice-generator",
  "optionalDependencies": {},
  "readme": "## Invoice Generator\n\nThe invoice generator is a simple tool for generating simulated invoice data. \n\n\n### Setup\n\nThe invoice generator requires node.JS and a few node modules. Assuming you have node.JS, you can install the node modules by using the following command.\n\n```\n[sudo] npm install \n```\n\n### Usage\n\nThe tool can then be run from the command line.   The invoice generator offers help output which should sufficiently explain the commands. Access the help by using the following command.\n\n```\nnode generate --help\n```\n\nwhich should show results such as the following\n\n```\n\nUsage: generate [options]\n\nOptions:\n\n  -h, --help                      output usage information\n  -V, --version                   output the version number\n  -t, --type <array|mongoimport>  The type of format to generate\n  -o, --output <file>             The file to which to output the generated records\n  -n, --number <records>          The number of records to generate\n\n```\n\n# Importing into Mongodb\n\n If you use the Mongo DB type option, then the output file can be imported directly into a mongo collection.\n\n```\nmongoimport --db barista --collection supplier --file output.json\n```\n\n\n\n\n",
  "readmeFilename": "README.md",
  "version": "0.3.0"
}
